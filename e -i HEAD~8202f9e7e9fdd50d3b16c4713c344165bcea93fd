[33mcommit 8202f9e7e9fdd50d3b16c4713c344165bcea93fd[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m)[m
Author: xdignya776 <dgwgos31@gmail.com>
Date:   Sun Apr 20 20:51:11 2025 +0300

    Initial commit

[1mdiff --git a/src/components/vps/ApiKeyForm.tsx b/src/components/vps/ApiKeyForm.tsx[m
[1mindex 46ee6ad..c6b3b7e 100644[m
[1m--- a/src/components/vps/ApiKeyForm.tsx[m
[1m+++ b/src/components/vps/ApiKeyForm.tsx[m
[36m@@ -1,9 +1,15 @@[m
[31m-[m
 import React, { useState } from 'react';[m
[31m-import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";[m
[31m-import { Button } from "@/components/ui/button";[m
[31m-import { Input } from "@/components/ui/input";[m
[31m-import { Label } from "@/components/ui/label";[m
[32m+[m[32mimport {[m
[32m+[m[32m  Card,[m
[32m+[m[32m  CardContent,[m
[32m+[m[32m  CardDescription,[m
[32m+[m[32m  CardFooter,[m
[32m+[m[32m  CardHeader,[m
[32m+[m[32m  CardTitle,[m
[32m+[m[32m} from '@/components/ui/card';[m
[32m+[m[32mimport { Button } from '@/components/ui/button';[m
[32m+[m[32mimport { Input } from '@/components/ui/input';[m
[32m+[m[32mimport { Label } from '@/components/ui/label';[m
 import { getApiKey, setApiKey, validateApiKey } from '@/services/digitalOceanService';[m
 import { toast } from '@/hooks/use-toast';[m
 [m
[36m@@ -12,7 +18,7 @@[m [minterface ApiKeyFormProps {[m
 }[m
 [m
 const ApiKeyForm: React.FC<ApiKeyFormProps> = ({ onApiKeySet }) => {[m
[31m-  const [apiKey, setApiKeyState] = useState(getApiKey() || '');[m
[32m+[m[32m  const [apiKey, setApiKeyState] = useState(process.env.DIGITALOCEAN_API_KEY || '');[m
   const [isLoading, setIsLoading] = useState(false);[m
   const [isValidating, setIsValidating] = useState(false);[m
 [m
[36m@@ -20,38 +26,31 @@[m [mconst ApiKeyForm: React.FC<ApiKeyFormProps> = ({ onApiKeySet }) => {[m
     e.preventDefault();[m
     setIsLoading(true);[m
     setIsValidating(true);[m
[31m-    [m
[32m+[m
     try {[m
[31m-      // Use your API key: ***REMOVED***[m
       const isValid = await validateApiKey(apiKey);[m
[31m-      [m
[32m+[m
       if (!isValid) {[m
         toast({[m
[31m-          title: "Invalid API Key",[m
[31m-          description: "The provided API key appears to be invalid. Please check and try again.",[m
[31m-          variant: "destructive"[m
[32m+[m[32m          title: 'Invalid API Key',[m
[32m+[m[32m          description: 'The provided API key appears to be invalid. Please check and try again.',[m
[32m+[m[32m          variant: 'destructive',[m
         });[m
[31m-        setIsLoading(false);[m
[31m-        setIsValidating(false);[m
         return;[m
       }[m
[31m-      [m
[31m-      // Save the valid API key[m
[32m+[m
       setApiKey(apiKey);[m
[31m-      [m
       toast({[m
[31m-        title: "Success",[m
[31m-        description: "API key has been saved and verified",[m
[32m+[m[32m        title: 'Success',[m
[32m+[m[32m        description: 'API key has been saved and verified.',[m
       });[m
[31m-      [m
[31m-      // Call the callback[m
       onApiKeySet();[m
     } catch (error) {[m
       console.error('Error setting API key:', error);[m
       toast({[m
[31m-        title: "Error",[m
[31m-        description: "Failed to save API key",[m
[31m-        variant: "destructive"[m
[32m+[m[32m        title: 'Error',[m
[32m+[m[32m        description: 'Failed to save API key.',[m
[32m+[m[32m        variant: 'destructive',[m
       });[m
     } finally {[m
       setIsLoading(false);[m
[36m@@ -59,13 +58,14 @@[m [mconst ApiKeyForm: React.FC<ApiKeyFormProps> = ({ onApiKeySet }) => {[m
     }[m
   };[m
 [m
[32m+[m[32m  const handleClear = () => setApiKeyState('');[m
[32m+[m
   return ([m
     <Card className="w-full max-w-md mx-auto">[m
       <CardHeader>[m
         <CardTitle>Digital Ocean API Key</CardTitle>[m
         <CardDescription>[m
[31m-          Enter your Digital Ocean API key to fetch available VPS packages.[m
[31m-          You can find your API key in the DigitalOcean dashboard under API.[m
[32m+[m[32m          Enter your Digital Ocean API key to fetch available VPS packages. You can find your API key in the DigitalOcean dashboard under API.[m
         </CardDescription>[m
       </CardHeader>[m
       <form onSubmit={handleSubmit}>[m
[36m@@ -81,14 +81,13 @@[m [mconst ApiKeyForm: React.FC<ApiKeyFormProps> = ({ onApiKeySet }) => {[m
                 required[m
               />[m
               <p className="text-sm text-muted-foreground">[m
[31m-                Your API key is stored locally and never sent to our servers directly.[m
[31m-                It will be securely passed to our backend for API calls.[m
[32m+[m[32m                Your API key is stored locally and never sent to our servers directly. It will be securely passed to our backend for API calls.[m
               </p>[m
             </div>[m
           </div>[m
         </CardContent>[m
         <CardFooter className="flex justify-between">[m
[31m-          <Button variant="outline" type="button" onClick={() => setApiKeyState('')}>[m
[32m+[m[32m          <Button variant="outline" type="button" onClick={handleClear}>[m
             Clear[m
           </Button>[m
           <Button type="submit" disabled={isLoading || isValidating}>[m

[33mcommit 91e3acdeb2d07073263b87b50aa7248a6b109403[m
Author: xdignya776 <dgwgos31@gmail.com>
Date:   Sun Apr 20 20:33:23 2025 +0300

    Initial commit

[1mdiff --git a/src/components/vps/ApiKeyForm.tsx b/src/components/vps/ApiKeyForm.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..46ee6ad[m
[1m--- /dev/null[m
[1m+++ b/src/components/vps/ApiKeyForm.tsx[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m
[32m+[m[32mimport React, { useState } from 'react';[m
[32m+[m[32mimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";[m
[32m+[m[32mimport { Button } from "@/components/ui/button";[m
[32m+[m[32mimport { Input } from "@/components/ui/input";[m
[32m+[m[32mimport { Label } from "@/components/ui/label";[m
[32m+[m[32mimport { getApiKey, setApiKey, validateApiKey } from '@/services/digitalOceanService';[m
[32m+[m[32mimport { toast } from '@/hooks/use-toast';[m
[32m+[m
[32m+[m[32minterface ApiKeyFormProps {[m
[32m+[m[32m  onApiKeySet: () => void;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst ApiKeyForm: React.FC<ApiKeyFormProps> = ({ onApiKeySet }) => {[m
[32m+[m[32m  const [apiKey, setApiKeyState] = useState(getApiKey() || '');[m
[32m+[m[32m  const [isLoading, setIsLoading] = useState(false);[m
[32m+[m[32m  const [isValidating, setIsValidating] = useState(false);[m
[32m+[m
[32m+[m[32m  const handleSubmit = async (e: React.FormEvent) => {[m
[32m+[m[32m    e.preventDefault();[m
[32m+[m[32m    setIsLoading(true);[m
[32m+[m[32m    setIsValidating(true);[m
[32m+[m[41m    [m
[32m+[m[32m    try {[m
[32m+[m[32m      // Use your API key: ***REMOVED***[m
[32m+[m[32m      const isValid = await validateApiKey(apiKey);[m
[32m+[m[41m      [m
[32m+[m[32m      if (!isValid) {[m
[32m+[m[32m        toast({[m
[32m+[m[32m          title: "Invalid API Key",[m
[32m+[m[32m          description: "The provided API key appears to be invalid. Please check and try again.",[m
[32m+[m[32m          variant: "destructive"[m
[32m+[m[32m        });[m
[32m+[m[32m        setIsLoading(false);[m
[32m+[m[32m        setIsValidating(false);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // Save the valid API key[m
[32m+[m[32m      setApiKey(apiKey);[m
[32m+[m[41m      [m
[32m+[m[32m      toast({[m
[32m+[m[32m        title: "Success",[m
[32m+[m[32m        description: "API key has been saved and verified",[m
[32m+[m[32m      });[m
[32m+[m[41m      [m
[32m+[m[32m      // Call the callback[m
[32m+[m[32m      onApiKeySet();[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('Error setting API key:', error);[m
[32m+[m[32m      toast({[m
[32m+[m[32m        title: "Error",[m
[32m+[m[32m        description: "Failed to save API key",[m
[32m+[m[32m        variant: "destructive"[m
[32m+[m[32m      });[m
[32m+[m[32m    } finally {[m
[32m+[m[32m      setIsLoading(false);[m
[32m+[m[32m      setIsValidating(false);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <Card className="w-full max-w-md mx-auto">[m
[32m+[m[32m      <CardHeader>[m
[32m+[m[32m        <CardTitle>Digital Ocean API Key</CardTitle>[m
[32m+[m[32m        <CardDescription>[m
[32m+[m[32m          Enter your Digital Ocean API key to fetch available VPS packages.[m
[32m+[m[32m          You can find your API key in the DigitalOcean dashboard under API.[m
[32m+[m[32m        </CardDescription>[m
[32m+[m[32m      </CardHeader>[m
[32m+[m[32m      <form onSubmit={handleSubmit}>[m
[32m+[m[32m        <CardContent>[m
[32m+[m[32m          <div className="grid w-full items-center gap-4">[m
[32m+[m[32m            <div className="flex flex-col space-y-1.5">[m
[32m+[m[32m              <Label htmlFor="apiKey">API Key</Label>[m
[32m+[m[32m              <Input[m
[32m+[m[32m                id="apiKey"[m
[32m+[m[32m                placeholder="Enter your Digital Ocean API key"[m
[32m+[m[32m                value={apiKey}[m
[32m+[m[32m                onChange={(e) => setApiKeyState(e.target.value)}[m
[32m+[m[32m                required[m
[32m+[m[32m              />[m
[32m+[m[32m              <p className="text-sm text-muted-foreground">[m
[32m+[m[32m                Your API key is stored locally and never sent to our servers directly.[m
[32m+[m[32m                It will be securely passed to our backend for API calls.[m
[32m+[m[32m              </p>[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </CardContent>[m
[32m+[m[32m        <CardFooter className="flex justify-between">[m
[32m+[m[32m          <Button variant="outline" type="button" onClick={() => setApiKeyState('')}>[m
[32m+[m[32m            Clear[m
[32m+[m[32m          </Button>[m
[32m+[m[32m          <Button type="submit" disabled={isLoading || isValidating}>[m
[32m+[m[32m            {isLoading || isValidating ? 'Verifying...' : 'Save & Verify Key'}[m
[32m+[m[32m          </Button>[m
[32m+[m[32m        </CardFooter>[m
[32m+[m[32m      </form>[m
[32m+[m[32m    </Card>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default ApiKeyForm;[m
